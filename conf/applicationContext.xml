<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:context="http://www.springframework.org/schema/context" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"  
    xmlns:tx="http://www.springframework.org/schema/tx" xmlns:p="http://www.springframework.org/schema/p" xmlns:util="http://www.springframework.org/schema/util" xmlns:jdbc="http://www.springframework.org/schema/jdbc"  
    xmlns:cache="http://www.springframework.org/schema/cache"  
    xsi:schemaLocation="  
    http://www.springframework.org/schema/context  
    http://www.springframework.org/schema/context/spring-context.xsd  
    http://www.springframework.org/schema/beans  
    http://www.springframework.org/schema/beans/spring-beans.xsd  
    http://www.springframework.org/schema/tx  
    http://www.springframework.org/schema/tx/spring-tx.xsd  
    http://www.springframework.org/schema/jdbc  
    http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd  
    http://www.springframework.org/schema/cache  
    http://www.springframework.org/schema/cache/spring-cache-4.3.xsd  
    http://www.springframework.org/schema/aop  
    http://www.springframework.org/schema/aop/spring-aop.xsd  
    http://www.springframework.org/schema/util  
    http://www.springframework.org/schema/util/spring-util.xsd">
    
    <!-- <context:annotation-config /> -->
    
    <context:property-placeholder location="classpath:app.properties" />
    
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
      <property name="driverClass" value="${jdbc.driver}" />
      <property name="jdbcUrl" value="${jdbc.url}" />
      <property name="user" value="${jdbc.user}" />
      <property name="password" value="${jdbc.password}" />
      <property name="maxPoolSize" value="${jdbc.c3p0.max.pool.size}" />
      <property name="minPoolSize" value="${jdbc.c3p0.min.pool.size}" />
      <property name="initialPoolSize" value="${jdbc.c3p0.initial.pool.size}" />
      <property name="acquireIncrement" value="3" />
    </bean>
    
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
      <tx:attributes>
          <tx:method name="save*" propagation="REQUIRED" read-only="false"/>
          <tx:method name="add*" propagation="REQUIRED" read-only="false"/>
          <tx:method name="update*" propagation="REQUIRED" read-only="false"/>
          <tx:method name="delete*" propagation="REQUIRED" read-only="false"/>
          <tx:method name="*" propagation="SUPPORTS" read-only="true"/>
      </tx:attributes>
    </tx:advice>
    
    <!-- Comment out the Spring AOP implementation for time logger -->
    <!-- 
    <bean id="serviceExecutionTimeLoggerAdvice" class="com.wadeyuan.training.advice.ServiceExecutionTimeLoggerAdvice" />
    -->
    
    <bean id="serviceExecutionTimeLoggerAspect" class="com.wadeyuan.training.aspect.ServiceExecutionTimeLoggerAspect" />
    
    <aop:config>
      <aop:pointcut id="serviceMethods" expression="execution(* com.wadeyuan.training.service..*.*(..))" />
      <!-- Comment out the Spring AOP implementation for time logger -->
      <!-- 
      <aop:advisor pointcut-ref="serviceMethods" advice-ref="serviceExecutionTimeLoggerAdvice" order="1" />
      <aop:advisor pointcut-ref="serviceMethods" advice-ref="txAdvice" order="2" />
      -->
       
      <!-- AspectJ implementation for time logger -->
      <aop:advisor pointcut-ref="serviceMethods" advice-ref="txAdvice" order="1" />
      <aop:aspect ref="serviceExecutionTimeLoggerAspect">
       <aop:pointcut id="serviceMethodsPointCut" expression="execution(* com.wadeyuan.training.service..*.*(..))" />
       <aop:around pointcut-ref="serviceMethodsPointCut" method="doAround"/>
      </aop:aspect>
    </aop:config>
    
    <bean id="pagination" class="com.wadeyuan.training.util.Pagination" scope="prototype">
      <property name="itemPerPage" value="${item.per.page}" />
    </bean>
    
    <!-- Start of jdbc -->
    <!-- 
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
      <property name="dataSource" ref="dataSource"></property>
    </bean> 
    
    <bean id="baseDao" abstract="true">
      <property name="jdbcTemplate" ref="jdbcTemplate"></property>
    </bean>
    
    <bean id="bookDao" class="com.wadeyuan.training.dao.impl.BookDaoImpl" parent="baseDao" />
    
    <bean id="userDao" class="com.wadeyuan.training.dao.impl.UserDaoImpl" parent="baseDao" />
     -->
    <!-- End of jdbc -->
    
    <!-- Start of mybatis -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
      <property name="dataSource" ref="dataSource" />
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
      <property name="mapperLocations" value="classpath:com/wadeyuan/training/entity/mappers/*Mapper.xml" /> 
    </bean>
    
    <bean id="baseDao" abstract="true">
        <property name="sqlSessionFactory" ref="sqlSessionFactory"/>
    </bean>
    
    <bean id="bookDao" class="com.wadeyuan.training.dao.mybatis.BookDaoImpl" parent="baseDao" />
    
    <bean id="userDao" class="com.wadeyuan.training.dao.mybatis.UserDaoImpl" parent="baseDao" />
    <!-- End of mybatis -->
    
    <bean id="bookService" class="com.wadeyuan.training.service.impl.BookServiceImpl">
        <property name="bookDao" ref="bookDao"/>
    </bean>
    
    <bean id="userService" class="com.wadeyuan.training.service.impl.UserServiceImpl">
        <property name="userDao" ref="userDao"/>
    </bean>
    
    <bean class="com.wadeyuan.training.util.SpringUtil"/>

</beans>